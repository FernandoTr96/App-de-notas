{"version":3,"sources":["firebase/firebase-config.js","types/types.js","actions/loaderActions.js","actions/authActions.js","helpers/uploadImg.js","helpers/removeImg.js","actions/notesActions.js","components/loading/Loader.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/ButtonMenu.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","components/loading/LoadingScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","Routers/AuthRouter.js","Routers/PrivateRoute.js","Routers/PublicRoute.js","Routers/AppRouter.js","Reducers/notesReducer.js","store/store.js","Reducers/authReducer.js","Reducers/loaderReducer.js","JournalApp.js","index.js"],"names":["db","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","googleAuthProvider","GoogleAuthProvider","auth","getAuth","types","startLoader","type","payload","value","finishLoader","login","uid","displayName","photoURL","logout","uploadImg","file","a","cloudinaryApi","timestamp","Math","round","Date","getTime","signatureStr","signature","SHA1","formData","FormData","append","fetch","method","body","response","ok","json","reject","data","Swal","fire","title","text","icon","confirmButtonText","removeImg","public_id","activeNote","id","note","getNotes","dispatch","notes","q","query","collection","orderBy","getDocs","forEach","doc","push","setNotes","updateNote","getState","noteToFireStore","docRef","updateDoc","refreshNote","removeNote","Loader","src","w","h","className","alt","width","height","defaultProps","NotesAppBar","noteListener","useDispatch","useSelector","state","active","loading","loader","date","DateTime","fromMillis","setLocale","toLocaleString","month","day","year","accept","onChange","e","target","files","upload","url","noteActive","noteWithUrlToFirestore","uploadImage","htmlFor","onClick","showCancelButton","confirmButtonColor","cancelButtonColor","then","result","isConfirmed","deleteDoc","NoteScreen","useForm","register","watch","setValue","useEffect","placeholder","autoComplete","defaultValue","NothingSelected","ButtonMenu","JournalEntry","checkboxMenu","dateFormat","toLocaleDateString","current","checked","style","backgroundImage","JournalEntries","map","Sidebar","useRef","ref","signOut","newNote","addDoc","console","log","JournalScreen","LoadingScreen","gif","LoginScreen","handleSubmit","getValues","errors","formState","onSubmit","email","password","signInWithEmailAndPassword","userCred","user","catch","err","startLoginEmailPassword","required","pattern","disabled","signInWithPopup","to","RegisterScreen","reset","userName","createUserWithEmailAndPassword","updateProfile","currentUser","registerUser","confirmPwd","AuthRouter","exact","path","component","PrivateRoute","Component","isAuth","rest","props","PublicRoute","AppRouter","useState","checking","setChecking","setisAuth","onAuthStateChanged","initialState","reducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ecf2254.chunk.js","sourcesContent":["import 'firebase/firestore';\r\nimport 'firebase/auth';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport {\r\n    getFirestore,\r\n    collection,\r\n    addDoc,\r\n    getDocs,\r\n    doc,\r\n    updateDoc,\r\n    deleteDoc,\r\n    query,\r\n    orderBy\r\n} from 'firebase/firestore';\r\nimport {\r\n    GoogleAuthProvider,\r\n    getAuth,\r\n    signInWithPopup,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    updateProfile,\r\n    onAuthStateChanged,\r\n    signOut\r\n} from 'firebase/auth';\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    //tuinformación de tu app en firebase\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_AUTH_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n};\r\n\r\n//inicializar\r\nconst firebase = initializeApp(firebaseConfig);\r\n\r\n// Initialize Firestore\r\nconst db = getFirestore();\r\n\r\n//Initialize auth functions\r\nconst googleAuthProvider = new GoogleAuthProvider();\r\nconst auth = getAuth();\r\n\r\nexport {\r\n    firebase,\r\n    db,\r\n    collection,\r\n    addDoc,\r\n    getDocs,\r\n    doc,\r\n    updateDoc,\r\n    deleteDoc,\r\n    query,\r\n    orderBy,\r\n    googleAuthProvider,\r\n    auth,\r\n    signInWithPopup,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    updateProfile,\r\n    onAuthStateChanged,\r\n    signOut\r\n}","export const types = {\r\n    login: '[Auth] login',\r\n    logout: '[Auth] logout',\r\n    loaderTrue: '[loader] True',\r\n    loaderFalse: '[loader] False',\r\n    notesAddNew: '[notes] addNew',\r\n    notesActive: '[notes] active',\r\n    notesResetActive: '[notes] reset active',\r\n    notesSet: '[notes] setNotes',\r\n    noteRefresh: '[notes] refresh',\r\n    noteRemove: '[notes] remove',\r\n    purgeNotes: '[notes] purge notes',\r\n    purgeLoader: '[loader] purge loader'\r\n};","import { types } from \"../types/types\"\r\n\r\nexport const startLoader = ()=>{\r\n    return {\r\n        type: types.loaderTrue,\r\n        payload:{\r\n            value: true\r\n        }\r\n    }\r\n}\r\n\r\nexport const finishLoader = ()=>{\r\n    return {\r\n        type: types.loaderFalse,\r\n        payload:{\r\n            value: false\r\n        }\r\n    }\r\n}\r\n\r\nexport const purgeLoader = ()=>(\r\n    {\r\n        type: types.purgeLoader\r\n    }\r\n)","import { \r\n    auth,\r\n    signInWithPopup,\r\n    googleAuthProvider,\r\n    createUserWithEmailAndPassword,\r\n    updateProfile,\r\n    signInWithEmailAndPassword,\r\n    signOut\r\n} from \"../firebase/firebase-config\";\r\nimport { types } from \"../types/types\";\r\nimport { finishLoader, startLoader } from \"./loaderActions\";\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nexport const startLoginEmailPassword = (email,password) =>{\r\n    return async (dispatch)=>{\r\n\r\n        await dispatch(startLoader());\r\n        \r\n        await signInWithEmailAndPassword(auth,email,password)\r\n        .then((userCred) =>{\r\n\r\n            const  {user:{uid,displayName,photoURL}} = userCred;\r\n            dispatch(login(uid,displayName,photoURL));\r\n\r\n        })\r\n        .catch(err =>{\r\n            console.log(err);\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: err,\r\n                icon: 'error',\r\n                confirmButtonText: 'ok'\r\n            })\r\n        })\r\n\r\n        await dispatch(finishLoader());\r\n    }\r\n};\r\n\r\nexport const startGoogleLogin = () =>{\r\n    return (dispatch)=>{\r\n        signInWithPopup(auth,googleAuthProvider)\r\n        .then( userCred =>{\r\n            //console.log(userCred);\r\n            const  {user:{uid,displayName,photoURL}} = userCred;\r\n            dispatch(login(uid,displayName,photoURL));\r\n        })\r\n    }\r\n};\r\n\r\nexport const login = (uid,displayName,photoURL='https://placeimg.com/100/100/animals') => (\r\n    {\r\n        type: types.login,\r\n        payload:{\r\n            uid,\r\n            displayName,\r\n            photoURL\r\n        }\r\n    }\r\n);\r\n\r\nexport const registerUser = (email,password,userName,reset)=>{\r\n    return async (dispatch)=>{\r\n        \r\n        await dispatch(startLoader());\r\n\r\n        //crear usuario en firebase\r\n        await createUserWithEmailAndPassword(auth,email,password)\r\n        .then( async ({user}) => {\r\n            \r\n            //funcion defirebase al obtener el usuario\r\n            //permite registrar el nombre y la foto\r\n            await updateProfile(auth.currentUser,{\r\n                displayName: userName,\r\n                photoURL: 'https://placeimg.com/100/100/any'\r\n            });\r\n\r\n            //actualizar el estado global\r\n            const  {uid,displayName,photoURL} = user;\r\n            dispatch(login(uid,displayName,photoURL));\r\n\r\n            //reset form\r\n            reset();\r\n\r\n        })\r\n        .catch(err =>{\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: err,\r\n                icon: 'error',\r\n                confirmButtonText: 'ok'\r\n            })\r\n        })\r\n\r\n        await dispatch(finishLoader());\r\n        \r\n    }\r\n};\r\n\r\nexport const startLogout = ()=>{\r\n    return async (dispatch) =>{\r\n        await signOut(auth);\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const logout = ()=>(\r\n    {\r\n        type: types.logout\r\n    }\r\n)\r\n","import {SHA1} from 'crypto-js'\r\nimport Swal from 'sweetalert2'\r\n\r\nexport const uploadImg = async (file) => {\r\n\r\n    const cloudinaryApi = `${process.env.REACT_APP_CDY_BASE_URL}/image/upload`;\r\n\r\n    const timestamp = Math.round((new Date()).getTime() / 1000);\r\n    const signatureStr = `timestamp=${timestamp}${process.env.REACT_APP_CDY_API_SECRET}`;\r\n    const signature = SHA1(signatureStr);\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    formData.append('timestamp', timestamp);\r\n    formData.append('signature', signature);\r\n    formData.append('api_key', process.env.REACT_APP_CDY_API_KEY);\r\n\r\n    try {\r\n\r\n        const response = await fetch(cloudinaryApi, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        const data = response.ok ? await response.json() : response.reject();\r\n\r\n        return data;\r\n        \r\n\r\n    } catch (error) {\r\n\r\n        Swal.fire({\r\n            title: 'image upload error',\r\n            text: error,\r\n            icon: 'error',\r\n            confirmButtonText: 'ok'\r\n        })\r\n\r\n        return null\r\n    }\r\n}","import Swal from 'sweetalert2'\r\nimport {SHA1} from 'crypto-js'\r\n\r\nexport const removeImg = async (public_id) => {\r\n\r\n    const cloudinaryApi = `${process.env.REACT_APP_CDY_BASE_URL}/image/destroy`;\r\n\r\n    const timestamp = Math.round((new Date()).getTime() / 1000);\r\n\r\n    //coinstruir el string que se encriptara usando los parametros del endpoint\r\n    const signatureStr = `public_id=${public_id}&timestamp=${timestamp}${process.env.REACT_APP_CDY_API_SECRET}`;\r\n    const signature = SHA1(signatureStr);\r\n\r\n    //enviar al cuerpo dela peticion cada dato necesario \r\n    const formData = new FormData();\r\n    formData.append('public_id', public_id);\r\n    formData.append('signature', signature);\r\n    formData.append('timestamp', timestamp);\r\n    formData.append('api_key', process.env.REACT_APP_CDY_API_KEY);\r\n\r\n\r\n    try {\r\n\r\n        const response = await fetch(cloudinaryApi, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        response.ok ? await response.json() : response.reject();\r\n\r\n    } catch (error) {\r\n        Swal.fire({\r\n            title: 'i cant delete image',\r\n            text: error,\r\n            icon: 'error',\r\n            confirmButtonText: 'ok'\r\n        })\r\n    }\r\n}","import Swal from \"sweetalert2\";\r\nimport { db, addDoc, collection, getDocs, updateDoc, doc, deleteDoc, query, orderBy } from \"../firebase/firebase-config\";\r\nimport { uploadImg } from \"../helpers/uploadImg\";\r\nimport {removeImg} from '../helpers/removeImg'\r\nimport { types } from \"../types/types\";\r\nimport { finishLoader, startLoader } from \"./loaderActions\";\r\n\r\n//insertar en firestore addDoc\r\n\r\n/* PARA INSERTAR EN FIRESTORE DEBE ESTAR AUTENTICADO    \r\n    allow read, write: if request.auth != null;\r\n*/\r\n\r\nexport const startNewNote = () => {\r\n    //getState: permite traer el estado global como un useSelector()\r\n    //estos argumentos son pasados por el moddleware\r\n    return async (dispatch, getState) => {\r\n\r\n        //id del usuario que llamo la accion o esta en sesion\r\n        const uid = getState().auth.uid;\r\n\r\n        //objeto que contendra la info de la nota\r\n        const newNote = {\r\n            title: 'New note',\r\n            body: '...',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        //insertar en firestore\r\n        try {\r\n\r\n            dispatch(startLoader());\r\n\r\n            const docRef = await addDoc(\r\n                collection(db, `${uid}/journal/notes`),\r\n                newNote\r\n            );\r\n\r\n            //activar nota\r\n            dispatch(activeNote(docRef.id, newNote));\r\n\r\n            //obtener las notas para actualizar el estado\r\n            dispatch(getNotes(uid));\r\n\r\n            dispatch(finishLoader());\r\n\r\n\r\n        } catch (error) {\r\n\r\n            console.log(error);\r\n            Swal.fire({\r\n                title: 'Not created',\r\n                text: error,\r\n                icon: 'error',\r\n                confirmButtonText: 'ok'\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const resetActiveNote = () => ({\r\n    type: types.notesResetActive\r\n})\r\n\r\n\r\n//Leer datos de firestore getDocs\r\n\r\nexport const getNotes = (uid) => {\r\n    return async (dispatch) => {\r\n\r\n        let notes = [];\r\n\r\n        try {\r\n\r\n            const q = query(collection(db, `${uid}/journal/notes`), orderBy('date', 'desc'));\r\n            const data = await getDocs(q);\r\n\r\n            data.forEach((doc) => {\r\n                notes.push(\r\n                    {\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }\r\n                )\r\n            })\r\n\r\n            dispatch(setNotes(notes));\r\n\r\n        } catch (error) {\r\n\r\n            Swal.fire({\r\n                title: 'I cant get the notes',\r\n                text: error,\r\n                icon: 'error',\r\n                confirmButtonText: 'ok'\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = (notes) => (\r\n    {\r\n        type: types.notesSet,\r\n        payload: notes\r\n    }\r\n);\r\n\r\n\r\n//actualizar nota\r\nexport const updateNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { auth: { uid } } = getState();\r\n\r\n        const noteToFireStore = { ...note };\r\n        delete noteToFireStore.id;\r\n\r\n        try {\r\n\r\n            const docRef = doc(db, `${uid}/journal/notes`, note.id);\r\n\r\n            await updateDoc(docRef, noteToFireStore);\r\n            dispatch(activeNote(note.id, note));\r\n            dispatch(refreshNote(note.id, note));\r\n\r\n            Swal.fire({\r\n                title: 'Note updated',\r\n                text: 'The note has been updated successfully !!',\r\n                icon: 'success',\r\n                confirmButtonText: 'ok'\r\n            })\r\n\r\n        } catch (error) {\r\n\r\n            Swal.fire({\r\n                title: 'I cant update the note',\r\n                text: error,\r\n                icon: 'error',\r\n                confirmButtonText: 'ok'\r\n            })\r\n\r\n        }\r\n    }\r\n}\r\n\r\nconst refreshNote = (id, data) => ({\r\n    type: types.noteRefresh,\r\n    payload: {\r\n        id, data\r\n    }\r\n})\r\n\r\n\r\n//subir imagen\r\nexport const uploadImage = (file) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        dispatch(startLoader());\r\n\r\n        const upload = await uploadImg(file);\r\n\r\n        if (upload !== null) {\r\n\r\n            const {url, public_id} = upload;\r\n\r\n            const noteActive = getState().notes.active;\r\n            const noteWithUrlToFirestore = {\r\n                ...noteActive,\r\n                public_id,\r\n                url\r\n            };\r\n\r\n            if (getState().notes.active?.public_id) {\r\n                const public_id = getState().notes.active.public_id;\r\n                removeImg(public_id);\r\n            }\r\n\r\n            dispatch(activeNote(noteWithUrlToFirestore.id, noteWithUrlToFirestore));\r\n            dispatch(updateNote(noteWithUrlToFirestore));\r\n\r\n        }\r\n\r\n        dispatch(finishLoader());\r\n\r\n    }\r\n}\r\n\r\n//Eliminar nota\r\n\r\nexport const deleteNote = (id) => {\r\n    return (dispatch, getState) => {\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then(async (result) => {\r\n            if (result.isConfirmed) {\r\n\r\n                dispatch(startLoader());\r\n\r\n                try {\r\n\r\n                    const uid = getState().auth.uid;\r\n                    await deleteDoc(doc(db, `${uid}/journal/notes`, id));\r\n                    dispatch(removeNote(id));\r\n\r\n                    if (getState().notes.active?.public_id) {\r\n                        const public_id = getState().notes.active.public_id;\r\n                        removeImg(public_id);\r\n                    }\r\n\r\n                    Swal.fire(\r\n                        'Deleted!',\r\n                        'Your note has been deleted.',\r\n                        'success'\r\n                    )\r\n\r\n\r\n                } catch (error) {\r\n\r\n                    Swal.fire({\r\n                        title: 'i cant delete the note',\r\n                        text: error,\r\n                        icon: 'error',\r\n                        confirmButtonText: 'ok'\r\n                    })\r\n\r\n                }\r\n\r\n                dispatch(finishLoader());\r\n\r\n                dispatch(resetActiveNote());\r\n\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nconst removeNote = (id) => (\r\n    {\r\n        type: types.noteRemove,\r\n        payload: id\r\n    }\r\n)\r\n\r\nexport const purgeNotes = () => (\r\n    {\r\n        type: types.purgeNotes\r\n    }\r\n)\r\n\r\n/* ASI ENTIENDO NO SQL\r\n\r\n//coleccion\r\nuid = [\r\n    //documento\r\n    journal = {\r\n\r\n        //coleccion\r\n        notes = [\r\n\r\n            //documento\r\n            id = {\r\n\r\n                //campos\r\n                body: \"\",\r\n                title: \"\",\r\n                date: \"\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\n[\r\n    {\r\n        journal: {\r\n            notes:[\r\n                01:{\r\n                    body: \"\",\r\n                    title: \"\",\r\n                    date: \"\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n]*/","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Loader = ({src, w = 18 , h = 18}) => {\r\n    return (\r\n        <>\r\n            <img className='loader' src={src} alt='loader' width={w} height={h} />\r\n        </>\r\n    )\r\n}\r\n\r\nLoader.propTypes = {\r\n    src: PropTypes.string.isRequired\r\n}\r\n\r\nLoader.defaultProps = {\r\n    src: 'https://samherbert.net/svg-loaders/svg-loaders/tail-spin.svg'\r\n}","import React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { DateTime } from 'luxon'\r\nimport { updateNote,uploadImage, deleteNote } from '../../actions/notesActions';\r\nimport {Loader} from '../loading/Loader'\r\n\r\nexport const NotesAppBar = ({noteListener}) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { notes: { active }, loader: {loading} } = useSelector(state => state);\r\n\r\n\r\n    //fecha \r\n    const config = { month: 'long', day: 'numeric', year: 'numeric' };\r\n    const date = DateTime.fromMillis(active.date).setLocale('mx').toLocaleString(config);\r\n\r\n\r\n    const handleSave = () => {\r\n        dispatch(\r\n            updateNote(\r\n                {\r\n                    id:active.id,\r\n                    ...noteListener,\r\n                    date: active.date\r\n                }\r\n            )\r\n        );\r\n    }\r\n\r\n    const handleImage = (e)=>{\r\n        let file = e.target.files[0];\r\n        dispatch(uploadImage(file));\r\n    }\r\n\r\n    const handleDelete = ()=>{\r\n        dispatch(deleteNote(active.id));\r\n    }\r\n\r\n    return (\r\n        <div className='notes__appbar'>\r\n            {active && <span><i className=\"fas fa-calendar-day\"></i> {date} </span>}\r\n            <div>\r\n\r\n                <input \r\n                id='file'\r\n                type='file' \r\n                className='none'\r\n                accept='*/img'\r\n                onChange={handleImage}\r\n                />\r\n\r\n                {loading && <Loader src='https://samherbert.net/svg-loaders/svg-loaders/three-dots.svg' w = {10} h = {10} />}\r\n                <button className='btn-picture'>\r\n                   <label htmlFor='file'>\r\n                        <i className=\"far fa-images\"></i> picture\r\n                   </label>\r\n                </button>\r\n\r\n                <button onClick={handleSave} className='btn-save'>\r\n                    <i className=\"fas fa-save\"></i> save\r\n                </button>\r\n\r\n                <button onClick={handleDelete}  className='btn-delete'>\r\n                    <i className=\"fas fa-trash-alt\"></i> delete\r\n                </button>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NotesAppBar } from './NotesAppBar'\r\nimport { useForm } from 'react-hook-form'\r\n\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const { notes: { active } } = useSelector(state => state);\r\n\r\n    const { register, watch, setValue } = useForm();\r\n\r\n    const noteListener = {\r\n        title: watch('title'),\r\n        body: watch('body')\r\n    }\r\n\r\n    //solo cambiar el value cuando cambie la nota activa\r\n    useEffect(() => {\r\n        setValue('title', active.title);\r\n        setValue('body', active.body);\r\n    \r\n    }, [active, setValue])\r\n\r\n    \r\n    return (\r\n        <div className='notes__main-content'>\r\n            <NotesAppBar noteListener={noteListener} />\r\n            <div className='notes__content'>\r\n\r\n                <input\r\n                    type='text'\r\n                    placeholder='Title'\r\n                    autoComplete='off'\r\n                    {...register('title')}\r\n                    defaultValue={watch('title')}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder='What happened today ?'\r\n                    {...register('body')}\r\n                    defaultValue={watch('body')}\r\n                ></textarea>\r\n\r\n                {\r\n                    active?.url &&\r\n                    <div className='notes__image'>\r\n                        <img\r\n                            src={active.url}\r\n                            alt='journal'\r\n                        />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className='nothing__main-content'>\r\n            <p>\r\n                select something\r\n                <br/>\r\n                or\r\n                <br/>\r\n                create entry\r\n                <br/>\r\n                <br/>\r\n                <img \r\n                width='50'\r\n                height='50'\r\n                src='https://c.tenor.com/0jWPxOP-71UAAAAC/chibi-cat.gif' alt='gif' />\r\n            </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const ButtonMenu = () => {\r\n    return (\r\n\r\n        <label htmlFor='btnMenu' className='journal__btn-menu'>\r\n            <span className='line-1'></span>\r\n            <span className='line-2'></span>\r\n            <span className='line-3'></span>\r\n        </label>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { activeNote } from '../../actions/notesActions';\r\n\r\n\r\nexport const JournalEntry = ({id,title,body,date,url,checkboxMenu}) => {\r\n\r\n   const dispatch = useDispatch();\r\n   const dateFormat = new Date(date).toLocaleDateString();\r\n\r\n    const handleActiveNote = ()=>{\r\n        \r\n        dispatch(activeNote(id,{\r\n           title,\r\n           body,\r\n           date,\r\n           url\r\n        }));\r\n\r\n        //cerrar el menu usando la referencia si esta en movil\r\n        checkboxMenu.current.checked = false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={handleActiveNote} className='journal__entry animate__animated animate__bounceInDown'>           \r\n            {\r\n                url ?\r\n                <div className='journal__picture' style={{backgroundImage: `url(${url})` }}></div> :\r\n                <div className='journal__picture' style={{backgroundImage:'url(https://socialistmodernism.com/wp-content/uploads/2017/07/placeholder-image.png?w=640)'}}></div>\r\n            }\r\n            <div className='journal__body'>\r\n                <div className='journal__title'>\r\n                    <h4>{title}</h4>\r\n                </div>\r\n                <div className='journal__desc'>\r\n                    <small>{body}</small>\r\n                </div>\r\n            </div>\r\n            <div className='journal__date'>\r\n                <small>{ dateFormat }</small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { JournalEntry } from './JournalEntry';\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport const JournalEntries = ({checkboxMenu}) => {\r\n\r\n    const {notes:{notes}} = useSelector(state => state);\r\n\r\n    return (\r\n        <div className='journal__entries'>\r\n            {\r\n                notes.map(note => \r\n                    <JournalEntry \r\n                    key={note.id} \r\n                    {...note}\r\n                    checkboxMenu={checkboxMenu}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/authActions'\r\nimport { purgeNotes, startNewNote } from '../../actions/notesActions'\r\nimport { ButtonMenu } from './ButtonMenu'\r\nimport { JournalEntries } from './JournalEntries'\r\nimport { Loader } from '../loading/Loader'\r\nimport { purgeLoader } from '../../actions/loaderActions'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    // useSelector de redux permite obtener el estado global\r\n    // osea el conjunto de reducers\r\n    const { auth: { displayName, photoURL }, loader: { loading } } = useSelector(state => state);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const checkboxMenu = useRef();\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n        dispatch(purgeLoader());\r\n        dispatch(purgeNotes());\r\n    }\r\n\r\n    const handleAddNewEntry = () => {\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <input ref={checkboxMenu} type='checkbox' id='btnMenu' />\r\n            <ButtonMenu />\r\n            <aside className='journal__aside animate__animated animate__fadeIn'>\r\n                <div className='journal__user'>\r\n                    <div className='journal__displayName'>\r\n                        <img className='journal__photo' src={photoURL} alt='photoURL' />\r\n                        <small>\r\n                            {displayName}\r\n                        </small>\r\n                    </div>\r\n                    <button onClick={handleLogout} ><i className=\"fas fa-power-off\"></i> Logout</button>\r\n                </div>\r\n\r\n                <div className='journal__btn-add-entry' title='add entry'>\r\n                    {\r\n\r\n                        loading ?\r\n                        <Loader src='https://samherbert.net/svg-loaders/svg-loaders/tail-spin.svg' w={25} h={25} /> :\r\n                        <button onClick={handleAddNewEntry}>\r\n                            <i className=\"far fa-calendar-plus\"></i>\r\n                            <small>Create entry</small>\r\n                        </button>\r\n\r\n                    }\r\n                </div>\r\n\r\n                <JournalEntries checkboxMenu={checkboxMenu} />\r\n            </aside>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { NoteScreen } from '../notes/NoteScreen'\r\nimport { NothingSelected } from './NothingSelected'\r\nimport { Sidebar } from './Sidebar'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {notes:{active}} = useSelector(state => state);\r\n\r\n    return (\r\n        <div className='journal__root'>\r\n            <Sidebar/>\r\n            <main>\r\n                {\r\n                    active ? \r\n                    <NoteScreen/> :\r\n                    <NothingSelected /> \r\n                }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Loader } from './Loader'\r\n\r\nexport const LoadingScreen = ({gif}) => {\r\n    return (\r\n        <div className='loading__loadingScreen'>\r\n            <img className='loading__gif' src={gif} alt='gif' />\r\n            <p>getting your session... wait !!</p>\r\n            <Loader src = 'https://samherbert.net/svg-loaders/svg-loaders/tail-spin.svg' /> \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/authActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Loader } from '../loading/Loader';\r\n\r\n/* validar formularios con el paquete : react-hooks-form\r\n   https://react-hook-form.com/get-started\r\n*/\r\n\r\n// para instalar el manejador de firebase en mi app y poder hacer autenticacion\r\n// npm install firebase\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    //paquete de validaciones\r\n    const { register, handleSubmit, watch, getValues, formState: { errors } } = useForm();\r\n\r\n    //console.log ( useForm() );\r\n\r\n    //para hacer dispatch a mi reducer de la store se utiliza\r\n    //el hook useDispatch de react-redux\r\n    const dispatch = useDispatch();\r\n\r\n    // useSelector de redux permite obtener el estado global\r\n    // osea el conjunto de reducers\r\n    const { loader: { loading } } = useSelector(state => state);\r\n\r\n    const submit = () => {\r\n        //valores del formulario\r\n        const { email, password } = getValues();\r\n\r\n        //dispatcch de la accion login\r\n        dispatch(startLoginEmailPassword(email, password));\r\n    };\r\n\r\n    const handleGoogleSingIn = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit(submit)} className='auth__form animate__animated animate__fadeIn' autoComplete='off'>\r\n\r\n            <legend>\r\n                JournalApp\r\n            </legend>\r\n\r\n            <input\r\n                type='text'\r\n                placeholder='📧 example@gmail.com'\r\n                defaultValue={watch('email')}\r\n                {...register('email', { required: true, pattern: /^[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?$/i })}\r\n            />\r\n            {errors.email?.type === 'required' && <small className='error'>*Este campo es requerido</small>}\r\n            {errors.email?.type === 'pattern' && <small className='error'>*La estructura del correo no es valida</small>}\r\n\r\n            <input\r\n                type='password'\r\n                placeholder='🔑 password'\r\n                defaultValue={watch('password')}\r\n                {...register('password', { required: true })}\r\n            />\r\n            {errors.password && <small className='error'>*Este campo es requerido</small>}\r\n\r\n            <button type='submit' disabled={loading} >\r\n                {loading && <Loader src='https://samherbert.net/svg-loaders/svg-loaders/tail-spin.svg' />}\r\n                Log-in\r\n            </button>\r\n\r\n            <div onClick={handleGoogleSingIn} className='auth__google-sign-in'>\r\n                <p className='auth__google-legend'>Login with social network</p>\r\n                <div className='auth__google-button'>\r\n                    <div>\r\n                        <img\r\n                            src='https://freesvg.org/img/1534129544.png'\r\n                            alt='google'\r\n                        />\r\n                    </div>\r\n                    <p>\r\n                        <b>Sign in with google</b>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n\r\n            <Link to='/auth/register' className='auth__link'>\r\n                Create new account\r\n            </Link>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useForm} from \"react-hook-form\"\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { registerUser } from '../../actions/authActions';\r\nimport { Loader } from '../loading/Loader';\r\n\r\n\r\n/* validar formularios con el paquete : react-hooks-form\r\n   https://react-hook-form.com/get-started\r\n*/\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    //paquete de validaciones\r\n    const {register, handleSubmit, reset, watch, getValues, formState: { errors }} = useForm();\r\n\r\n    //console.log ( useForm() );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const {loader:{loading}} = useSelector(state => state);\r\n\r\n    const submit = ()=>{\r\n        const {email,password,userName} = getValues();\r\n        dispatch(registerUser(email,password,userName,reset));\r\n    };\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handleSubmit(submit)} className='auth__form animate__animated animate__fadeIn' autoComplete='off'>\r\n\r\n            <legend>\r\n                Register\r\n            </legend>\r\n\r\n            <input\r\n                type='email'\r\n                placeholder='📧 example@gmail.com'\r\n                defaultValue={watch('email')}\r\n                { ...register( 'email' , {required:true, pattern: /^[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[A-Za-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?$/i} ) }\r\n            />\r\n            {errors.email?.type==='required' && <small className='error'>*Este campo es requerido</small>}\r\n            {errors.email?.type==='pattern' && <small className='error'>*La estructura del correo no es valida</small>}\r\n\r\n            <input\r\n                type='text'\r\n                placeholder='👤 your user name'\r\n                defaultValue={watch('userName')}\r\n                { ...register( 'userName' , {required:true} ) }\r\n            />\r\n            {errors.userName?.type==='required' && <small className='error'>*Este campo es requerido</small>}\r\n\r\n            <input\r\n                type='password'\r\n                placeholder='🔑 Password'\r\n                defaultValue={watch('password')}\r\n                { ...register( 'password' , {required:true, pattern: /^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/i} ) }\r\n            />\r\n            {errors.password?.type==='required' && <small className='error'>*Este campo es requerido</small>}\r\n            {errors.password?.type==='pattern' && <small className='error'>*La contraseña debe tener al entre 8 y 16 caracteres, al menos un dígito, al menos una minúscula y al menos una mayúscula</small>}\r\n\r\n            <input\r\n                type='password'\r\n                placeholder='🔑 Confirm password'\r\n                defaultValue={watch('confirmPwd')}\r\n                { ...register( 'confirmPwd' , {required:true} ) }\r\n            />\r\n            {errors.confirmPwd?.type==='required' && <small className='error'>*Este campo es requerido</small>}\r\n            {watch('password') !== watch('confirmPwd') && <small className='error'>*Las contraseñas no coinciden</small>}\r\n            \r\n            <button type='submit' disabled={loading}>\r\n            {loading && <Loader src = 'https://samherbert.net/svg-loaders/svg-loaders/tail-spin.svg' /> } \r\n                Create account\r\n            </button>\r\n\r\n            <Link to='/auth/login' className='auth__link'>\r\n                I have a account \r\n            </Link>\r\n\r\n        </form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { LoginScreen } from '../components/auth/LoginScreen'\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className='auth__main'>\r\n            <div className='auth__form-container'>\r\n                <Switch>\r\n                    <Route exact path='/auth/login' component={LoginScreen} />\r\n                    <Route exact path='/auth/register' component={RegisterScreen} />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({ component: Component, isAuth, ...rest }) => {\r\n    return (\r\n        <Route {...rest} component={(props) => (\r\n            isAuth ? <Component {...props} /> : <Redirect to='/auth/login' />\r\n        )} />\r\n    );\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    component: PropTypes.func.isRequired,\r\n    isAuth: PropTypes.bool.isRequired\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({ component: Component, isAuth, ...rest }) => {\r\n    return (\r\n        <Route {...rest} component={ (props) => (\r\n            !isAuth ? <Component {...props} /> : <Redirect to='/' />\r\n        )} />\r\n    );\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    component: PropTypes.func.isRequired,\r\n    isAuth: PropTypes.bool.isRequired\r\n}\r\n","import { onAuthStateChanged } from '@firebase/auth'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { HashRouter as Router, Switch, Redirect } from 'react-router-dom'\r\nimport { login } from '../actions/authActions'\r\nimport { getNotes } from '../actions/notesActions'\r\nimport { JournalScreen } from '../components/journal/JournalScreen'\r\nimport { LoadingScreen } from '../components/loading/LoadingScreen'\r\nimport { auth } from '../firebase/firebase-config'\r\nimport { AuthRouter } from './AuthRouter'\r\nimport { PrivateRoute } from './PrivateRoute'\r\nimport { PublicRoute } from './PublicRoute'\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //estado para saber si esta autenticado\r\n    const [checking, setChecking] = useState(true);\r\n    const [isAuth, setisAuth] = useState(false);\r\n\r\n    //observer de firebase\r\n    //obtiene los datos de la ultima autenticacion realizada\r\n    //lo hacemos en el router porque asi estara presente en toda la app\r\n    //y detectara los cambios de la sesion en cada pantalla\r\n\r\n    useEffect(() => {\r\n\r\n        onAuthStateChanged(auth, (user) => {\r\n\r\n            if (user?.uid) {\r\n                dispatch(\r\n                    login(\r\n                        user.uid,\r\n                        user.displayName,\r\n                        user.photoURL\r\n                    )\r\n                );\r\n                setisAuth(true);\r\n                dispatch(getNotes(user.uid));\r\n            }\r\n            else {\r\n                setisAuth(false);\r\n            }\r\n\r\n            setChecking(false);\r\n\r\n        })\r\n\r\n    }, [dispatch, setChecking, setisAuth])\r\n\r\n    //mostrar pantalla de espera mientras se comprueba si hay un uid de usuario\r\n    //comprobar si hubo un logueo\r\n    if (checking) {\r\n        return (\r\n            <LoadingScreen\r\n                gif='https://i.pinimg.com/originals/df/0d/fd/df0dfd0cbde946eface1b152f3e62625.gif'\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <>\r\n                <Switch>\r\n                    <PrivateRoute exact path='/' isAuth={isAuth} component={JournalScreen} />\r\n                    <PublicRoute path='/auth' isAuth={isAuth} component={AuthRouter} />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesResetActive:\r\n            return {\r\n                ...state,\r\n                active: null\r\n            }\r\n\r\n        case types.notesSet:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n\r\n        case types.noteRefresh:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(note =>\r\n                    note.id === action.payload.id ?\r\n                        action.payload.data :\r\n                        note\r\n                )\r\n            }\r\n\r\n        case types.noteRemove:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n        \r\n        case types.purgeNotes:\r\n            return{\r\n                notes: [],\r\n                active: null\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","//para crear la store es necesario utilizar el metodo createStore de redux\r\nimport {createStore,combineReducers, applyMiddleware, compose} from 'redux';\r\n//middleware\r\nimport thunk from 'redux-thunk';\r\n//reducers\r\nimport { authReducer } from '../Reducers/authReducer';\r\nimport { loaderReducer } from '../Reducers/loaderReducer';\r\nimport { notesReducer } from '../Reducers/notesReducer';\r\n\r\n//combine reducer es para crear un objeto de puros reducer\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    loader: loaderReducer,\r\n    notes: notesReducer\r\n});\r\n\r\n//el createStore va recibir la variable con el combineReducers \r\n//asi guardaremos todos los reducer en la store\r\n\r\n//en el github de la extension redux dev tools \r\n//indica que la store debe llevar el segundo parametro (middleware)\r\n//para versse en el navegador y utilizarla extension\r\n//window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n//https://github.com/zalmoxisus/redux-devtools-extension#usage\r\n\r\n//redux-thunk un middleware para hacer peticiones async con redux\r\n//npm install --save redux-thunk\r\n\r\n/* SI AÑADIMOS EL THUNK */\r\n//middleware de react dev tools\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = (state={},action)=>{\r\n    switch (action.type) {\r\n        \r\n        case types.login:           \r\n        return {\r\n            uid: action.payload.uid,\r\n            displayName: action.payload.displayName,\r\n            photoURL: action.payload.photoURL\r\n        };\r\n\r\n        case types.logout:           \r\n        return {};\r\n        \r\n        default:\r\n        return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const loaderReducer = (state={},action)=> {\r\n    switch (action.type) {\r\n        \r\n        case types.loaderTrue:         \r\n        return {\r\n            ...state,\r\n            loading: action.payload.value\r\n        }\r\n\r\n        case types.loaderFalse:         \r\n        return {\r\n            ...state,\r\n            loading: action.payload.value\r\n        }\r\n\r\n        case types.purgeLoader:\r\n        return{}\r\n\r\n    \r\n        default:\r\n        return state;\r\n    }\r\n}","import { AppRouter } from \"./Routers/AppRouter\";\n//implementar nuestra store/redux en toda la app\n//mediante react-redux\nimport {Provider} from 'react-redux';\nimport { store } from \"./store/store\";\n\n//la store se manda como prop en el provider\nfunction JournalApp() {\n\n  return (\n    <Provider store={store} >\n      <AppRouter/>\n    </Provider>\n  );\n}\n\nexport default JournalApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport JournalApp from './JournalApp';\nimport './styles/app.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <JournalApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}